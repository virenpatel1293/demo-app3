[{"D:\\react_app\\demo-app3\\src\\index.js":"1","D:\\react_app\\demo-app3\\src\\App.js":"2","D:\\react_app\\demo-app3\\src\\Users\\AddUser.js":"3","D:\\react_app\\demo-app3\\src\\Default.js":"4","D:\\react_app\\demo-app3\\src\\component\\Login.js":"5","D:\\react_app\\demo-app3\\src\\component\\ProductCard.js":"6","D:\\react_app\\demo-app3\\src\\component\\ProductList.js":"7","D:\\react_app\\demo-app3\\src\\UI\\HorizontalScrollView.js":"8","D:\\react_app\\demo-app3\\src\\component\\ProductDeals.js":"9","D:\\react_app\\demo-app3\\src\\component\\ProductHeighlights.js":"10","D:\\react_app\\demo-app3\\src\\component\\Laptop.js":"11","D:\\react_app\\demo-app3\\src\\UI\\QtyBox.js":"12","D:\\react_app\\demo-app3\\src\\component\\LaptopGallery.js":"13","D:\\react_app\\demo-app3\\src\\component\\MyGallery.js":"14","D:\\react_app\\demo-app3\\src\\component\\LaptopSpec.js":"15","D:\\react_app\\demo-app3\\src\\component\\LaptopBundles.js":"16","D:\\react_app\\demo-app3\\src\\component\\LaptopReviews.js":"17","D:\\react_app\\demo-app3\\src\\component\\LaptopLinks.js":"18","D:\\react_app\\demo-app3\\src\\component\\LaptopSpecDetails.js":"19","D:\\react_app\\demo-app3\\src\\component\\Modals\\AskQuestion.js":"20","D:\\react_app\\demo-app3\\src\\component\\Modals\\TellFriend.js":"21","D:\\react_app\\demo-app3\\src\\component\\Bundle.js":"22"},{"size":518,"mtime":1665146000207,"results":"23","hashOfConfig":"24"},{"size":651,"mtime":1664781467547,"results":"25","hashOfConfig":"24"},{"size":1393,"mtime":1664181151268,"results":"26","hashOfConfig":"24"},{"size":877,"mtime":1664459014914,"results":"27","hashOfConfig":"24"},{"size":1428,"mtime":1664183414704,"results":"28","hashOfConfig":"29"},{"size":1659,"mtime":1664866151114,"results":"30","hashOfConfig":"24"},{"size":759,"mtime":1664865667945,"results":"31","hashOfConfig":"24"},{"size":1401,"mtime":1664344441825,"results":"32","hashOfConfig":"29"},{"size":2761,"mtime":1665150222085,"results":"33","hashOfConfig":"24"},{"size":637,"mtime":1664865945567,"results":"34","hashOfConfig":"24"},{"size":18581,"mtime":1665404460177,"results":"35","hashOfConfig":"24"},{"size":962,"mtime":1664882733340,"results":"36","hashOfConfig":"24"},{"size":312,"mtime":1664790165370,"results":"37","hashOfConfig":"24"},{"size":569,"mtime":1664781717168,"results":"38","hashOfConfig":"24"},{"size":830,"mtime":1665225920581,"results":"39","hashOfConfig":"24"},{"size":6474,"mtime":1665404487653,"results":"40","hashOfConfig":"24"},{"size":1199,"mtime":1665150164359,"results":"41","hashOfConfig":"24"},{"size":1433,"mtime":1665398162395,"results":"42","hashOfConfig":"24"},{"size":942,"mtime":1665134613999,"results":"43","hashOfConfig":"24"},{"size":2251,"mtime":1664889965045,"results":"44","hashOfConfig":"24"},{"size":2166,"mtime":1664890506824,"results":"45","hashOfConfig":"24"},{"size":4094,"mtime":1665410106926,"results":"46","hashOfConfig":"24"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},"k8t8q",{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"6wuaho",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"49"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"49"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"49"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"49"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"49"},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"92"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"49"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"49"},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\react_app\\demo-app3\\src\\index.js",[],["102","103"],"D:\\react_app\\demo-app3\\src\\App.js",[],"D:\\react_app\\demo-app3\\src\\Users\\AddUser.js",[],"D:\\react_app\\demo-app3\\src\\Default.js",[],"D:\\react_app\\demo-app3\\src\\component\\Login.js",[],["104","105"],"D:\\react_app\\demo-app3\\src\\component\\ProductCard.js",["106"],"import React from \"react\";\r\nimport { Badge, Button, Card } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport ProductHeighlights from \"./ProductHeighlights\";\r\n\r\nconst ProductCard= (props)=>{\r\n    const navigate = useNavigate();\r\n    let crypto = require(\"crypto\");\r\n    const moreInfoClick = (product) =>{\r\n        if(product.product_type == 3)\r\n            navigate(`/Details/${product.product_id}`);\r\n    }\r\n\r\n    return (\r\n        <Card style={{ width: '18rem' }} key={crypto.randomBytes(10).toString('hex')}>\r\n            <div style={{height:'250px' }} className=\"d-flex align-items-center justify-content-center\">\r\n                <Card.Img variant=\"\" className=\"p-3\" src={'https://www.evetech.co.za/'+props.product.product_img_url} />\r\n            </div>\r\n            <Card.Body className=\"p-2\">\r\n                <Card.Title className=\"overflow-hidden text-center text-bg-light p-1 rounded-2\" style={{maxHeight:'40px', fontSize:'15px', fontWeight:'600'}}>{props.product.product_name}</Card.Title>\r\n                {props.product.high && <ProductHeighlights high={props.product.high}/> }\r\n                <Card.Footer className=\"text-center\">\r\n                    <Badge bg=\"secondary\" style={{fontSize:'18px'}} className=\"w-100 mt-2 mb-2\">\r\n                        R {props.product.product_price} <small style={{fontSize:'11px'}}>Inc. VAT</small>\r\n                    </Badge>\r\n                    <Button className=\"btn btn-primary w-100\" onClick={() => moreInfoClick(props.product)}>More Info</Button>\r\n                </Card.Footer>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default ProductCard","D:\\react_app\\demo-app3\\src\\component\\ProductList.js",[],"D:\\react_app\\demo-app3\\src\\UI\\HorizontalScrollView.js",[],["107","108"],"D:\\react_app\\demo-app3\\src\\component\\ProductDeals.js",["109"],"import React, { useEffect, useState } from \"react\";\r\nimport { Card } from \"react-bootstrap\";\r\nimport ProductList from \"./ProductList\";\r\n/* import HorizontalScrollView from \"../UI/HorizontalScrollView\"; */\r\nimport { useSpring,animated } from \"react-spring\";\r\nimport { useGesture } from \"react-use-gesture\";\r\n\r\nconst ProductDeals= (props)=>{\r\n    const [laptops, setLaptops] = useState([]);\r\n    let crypto = require(\"crypto\");\r\n    const fetchData = async ()=>{\r\n\r\n        const prods = await fetch('http://localhost:5000/byQueryId',{\r\n            method:'POST',\r\n            headers:{\r\n                'Content-Type':'application/json',\r\n                'Accept' : 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                queryId : props.QueryId\r\n            })\r\n        })\r\n        .then(res=>res.json());\r\n        setLaptops(prods.result);\r\n    }\r\n\r\n    useEffect(()=>{\r\n        fetchData();\r\n    },[]);\r\n\r\n\r\n    return (\r\n       <Card key={crypto.randomBytes(10).toString('hex')}>\r\n            <Card.Header>\r\n                <h3>{props.DealTitle}</h3>\r\n            </Card.Header>\r\n            <Card.Body className=\"p-0 m-0\">\r\n                <HorizontalScrollView className=\"overflow-scroll hide-scroll p-3\" key={crypto.randomBytes(10).toString('hex')}>\r\n                    <ProductList data={laptops} key={crypto.randomBytes(10).toString('hex')}></ProductList>\r\n                </HorizontalScrollView>\r\n            </Card.Body>\r\n        </Card>\r\n\r\n    );\r\n\r\n}\r\n\r\nfunction HorizontalScrollView(props) {\r\n    const ref = React.useRef();\r\n    const isDragging = React.useRef(false);\r\n    const [{ x }, set, stop] = useSpring(() => ({ x: 0 }));\r\n    const bind = useGesture(\r\n      {\r\n        onDrag({ down, movement: [x], first, last, vxvy: [vx] }) {\r\n          if (first) isDragging.current = true;\r\n          if (last) setTimeout(() => (isDragging.current = false), 0);\r\n          set({ x: -x, immediate: down });\r\n        },\r\n        onClickCapture(ev) {\r\n          if (isDragging.current) {\r\n            try{\r\n                ev.stopPropagation();\r\n            }catch(e){}\r\n          }\r\n        },\r\n        onWheelStart() {\r\n          // Stop any user-land scroll animation from confcliting with the browser\r\n          try{\r\n            stop();\r\n          }catch(e){}\r\n        }\r\n      },\r\n      {\r\n        drag: {\r\n          axis: \"x\",\r\n          filterTaps: true,\r\n          initial() {\r\n            return [-ref.current.scrollLeft, 0];\r\n          }\r\n        }\r\n      }\r\n    );\r\n  \r\n    return (\r\n      <animated.div\r\n        ref={ref}\r\n        scrollLeft={x}\r\n        className={props.className}\r\n        {...bind()}\r\n      >\r\n        {props.children}\r\n      </animated.div>\r\n    );\r\n  }\r\n\r\n\r\nexport default ProductDeals;","D:\\react_app\\demo-app3\\src\\component\\ProductHeighlights.js",["110"],"import React from \"react\";\r\nimport { Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\n\r\nconst ProductHeighlights = (props) => {\r\n    let high = props.high;\r\n    let crypto = require(\"crypto\");\r\n\r\n    return ( \r\n    <div className=\"overflow-hidden\" style={{maxHeight:'122px'}}>\r\n        <ListGroup variant=\"primary\" className=\"p-0 m-0\">\r\n        {high.split(\"|\").map((highlight) => <ListGroupItem  className=\"m-0\" style={{fontSize:'12px', padding:'5px'}} key={crypto.randomBytes(10).toString('hex')} dangerouslySetInnerHTML={{ __html: highlight }} />)}\r\n        </ListGroup>\r\n    </div>);\r\n}\r\n\r\nexport default ProductHeighlights;","D:\\react_app\\demo-app3\\src\\component\\Laptop.js",["111","112","113","114","115","116","117","118","119"],"import React, { useEffect, useState } from \"react\";\r\nimport { Badge, Button, Col, Container, Image, NavItem, Row, Tab, Tabs } from \"react-bootstrap\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport QtyBox from \"../UI/QtyBox\";\r\nimport LaptopBundles from \"./LaptopBundles\";\r\nimport LaptopGallery from \"./LaptopGallery\";\r\nimport LaptopLinks from \"./LaptopLinks\";\r\nimport LaptopReviews from \"./LaptopReviews\";\r\nimport LaptopSpec from \"./LaptopSpec\";\r\nimport {FcCurrencyExchange, FcLike, FcQuestions, FcShare} from 'react-icons/fc';\r\nimport AskQuestion from \"./Modals/AskQuestion\";\r\nimport TellFriend from \"./Modals/TellFriend\";\r\nvar _ = require(\"lodash\");\r\n\r\nconst Laptop = () => {\r\n    const params= useParams();\r\n    const navigate = useNavigate();\r\n    let crypto = require(\"crypto\");\r\n\r\n    const [laptop, setLaptop] = useState({});\r\n    const [stockBg, setStockBg] = useState('success');\r\n    const [stockStatus, setStockStatus] = useState('In Stock');\r\n    const [adCart,setAdCart] = useState(true);\r\n    const [divNotify,setDivNotify] = useState(false);\r\n    const [cartElements,setCartElements] = useState(null);\r\n    const [similarLinks, setSimilarLinks] = useState([]);\r\n    const [brand, setBrand] = useState('');\r\n    const [specification, setSpecification] = useState(null);\r\n    const [reviews, setReviews] = useState(null);\r\n    const [bundles,setBundles] = useState(null);\r\n\r\n    /* Modals */\r\n    const [askQuestionShow, setAskQuestionShow] = useState(false);\r\n    const [tellFriendShow, setTellFriendShow] = useState(false);\r\n    const [selectedBundleItems, setSelecetecBundleItems] = useState([]);\r\n\r\n    let ProductId = 0;\r\n    let highlights = null;\r\n    ProductId = parseInt(params.ProductId);\r\n    const [gallery,setGallery] = useState({});\r\n    const [galleryData, setGalleryData] = useState([\r\n        {\r\n          original: '',\r\n          thumbnail: '',\r\n        },]);\r\n\r\n    useEffect(()=>{\r\n        if(isNaN(ProductId)){\r\n            navigate(\"/\");\r\n        }\r\n        else{\r\n            /* Gallery Logic */\r\n            let galleryImages=[];\r\n\r\n            const getGallery = async (imgUrl)=>{\r\n                const prods = await fetch(`http://localhost:5000/laptopGalleryById/${ProductId}`,{\r\n                    method:'GET',\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        'Accept' : 'application/json'\r\n                    }\r\n                })\r\n                .then(res=>res.json());\r\n                let gall = prods.result[0];\r\n\r\n                /* Set Images to gallery */\r\n                setGallery(prevGallery => {\r\n                    prevGallery = gall;\r\n\r\n                    try\r\n                    {\r\n                        let images = gall.ImageGallery.split(\"|\").map(image => {\r\n                            return `https://www.evetech.co.za/${image}`;\r\n                        });\r\n                        let imageThumb = gall.ImageGalleryThumb.split(\"|\").map(image => {\r\n                            return `https://www.evetech.co.za/${image}`;\r\n                        });\r\n\r\n                        \r\n                        galleryImages.push({\r\n                            original:  imgUrl,\r\n                            thumbnail: imgUrl,\r\n                        });\r\n\r\n                        for(let i=0;i<images.length ; i++) {\r\n                            galleryImages.push({\r\n                                \"original\" : images[i],\r\n                                \"thumbnail\":  images[i]\r\n                            });\r\n                        }\r\n\r\n                        /* Set Images to gallery data */\r\n                        setGalleryData(prevGalleryData => {\r\n                            prevGalleryData = galleryImages;\r\n                            return galleryImages;            \r\n                        }); \r\n                    }\r\n                    catch(e){\r\n                        \r\n                    }\r\n\r\n                    return prevGallery;            \r\n                });\r\n            }   \r\n            /* Gallery Logic */\r\n\r\n            const getSimilarLinks = async (linkid) => {\r\n                const linksData = await fetch(`http://localhost:5000/laptopSimilarLinks/${linkid}`,{\r\n                    method:'GET',\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        'Accept' : 'application/json'\r\n                    }\r\n                })\r\n                .then(res=>res.json());\r\n                let links = linksData.result;\r\n                setSimilarLinks(prevLink =>{\r\n                    prevLink = links;\r\n                    return prevLink\r\n                });\r\n                setBrand(prevBrand=>{\r\n                    prevBrand = laptop.Brand;\r\n                    return prevBrand;\r\n                });\r\n            }\r\n\r\n            /* \r\n               Getting Similar Links Mehtods\r\n             */\r\n\r\n            const getSpecification= async(npid)=>{\r\n                const specs = await fetch(`http://localhost:5000/laptopSpecifications/${npid}`,{\r\n                    method:'GET',\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        'Accept' : 'application/json'\r\n                    }\r\n                }).then(res=>res.json());\r\n                let specsAll = specs.result;\r\n                setSpecification(prevSpec => {\r\n                    prevSpec = specsAll;\r\n                    return specsAll\r\n                });\r\n            };\r\n\r\n            /* \r\n               Getting Specificaitons Method\r\n             */\r\n\r\n            const getReviews= async(npid,linkId,rstatus)=>{\r\n                const reviewsData = await fetch(`http://localhost:5000/laptopReviews/${npid}/${linkId}/${rstatus}`,{\r\n                    method:'GET',\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        'Accept':'application/json'\r\n                    }\r\n                }).then(res=>res.json());\r\n\r\n                let reviewsAll =reviewsData.result;   \r\n                setReviews(prevReviews => {\r\n                    prevReviews = reviewsAll;\r\n                    return prevReviews;\r\n                });\r\n            }\r\n\r\n            /* \r\n               Getting Reviews Method\r\n             */\r\n\r\n            const getBundles = async(npid)=>{\r\n                const bundleData = await fetch(`http://localhost:5000/laptopBundles/${npid}`,{\r\n                   method:'GET',\r\n                   headers:{\r\n                        'Content-Type':'application/json',\r\n                        'Accept':'application/json'                        \r\n                   }     \r\n                }).then(res=>res.json());\r\n\r\n                let bundlesAll = bundleData.result;\r\n                /* console.log(\"BundleData\",bundlesAll); */\r\n                setBundles(prevBundle =>{\r\n                    prevBundle = bundlesAll;\r\n                    return prevBundle;\r\n                })\r\n            }\r\n\r\n            /* \r\n               Getting Bundles Method\r\n            */\r\n\r\n            const fetchData = async ()=>{\r\n                const prods = await fetch(`http://localhost:5000/laptopById/${ProductId}`,{\r\n                    method:'GET',\r\n                    headers:{\r\n                        'Content-Type':'application/json',\r\n                        'Accept' : 'application/json'\r\n                    }\r\n                })\r\n                .then(res=>res.json());\r\n                let product = prods.result[0];\r\n\r\n                setLaptop(prods.result[0]);\r\n                setStockStatus(prevStat=> {\r\n                    let status= product.StockStatus.toLowerCase();\r\n\r\n                    if(status.includes(\"out of stock\") || status.includes(\"pre-order\") || status.includes(\"coming soon\") || status.includes(\"notify me\") || status.includes(\"coming soon / pre-order\") || status.includes(\"product discontinued\") || status.includes(\"stock to be confirm\"))\r\n                    {\r\n                        setAdCart(false);\r\n                        setDivNotify(true);\r\n                        if(status.includes(\"out of stock\") || status.includes(\"pre-order\"))\r\n                        {\r\n                            setStockBg(\"danger\");   \r\n                        }\r\n                        setCartElements(\r\n                            <Row  className=\"pe-2 ps-2 pt-1 pb-1\">\r\n                                <Button variant=\"danger\" className=\"w-100 pt-3 pb-3 fs-6\" onClick={notifyMe}>\r\n                                    Notify Me\r\n                                </Button>\r\n                            </Row>\r\n                        );\r\n                    }\r\n                    else{\r\n                        setAdCart(true);\r\n                        setDivNotify(false);\r\n                        setCartElements(\r\n                            <div>\r\n                                 <Row className=\"pe-2 ps-2 pt-1 pb-1\">\r\n                                     <Button variant=\"warning\" className=\"w-100 pt-2 pb-2 fs-6\" onClick={addToCart}>Add To Cart</Button>\r\n                                 </Row>\r\n                                 <Row className=\"pe-2 ps-2 pt-1 pb-1\">\r\n                                     <Button variant=\"warning\" className=\"w-100 pt-2 pb-2 fs-6\">Buy Now</Button>\r\n                                 </Row>\r\n                            </div>\r\n                         );\r\n                    }\r\n\r\n                    prevStat  = product.StockStatus;\r\n                    return prevStat;\r\n                });\r\n                \r\n                /* Page Work */\r\n                if(product.high)\r\n                {\r\n                    highlights = product.high.split(\"|\").map((highlight) => {\r\n                        return <Col className=\"m-0\" style={{fontSize:'12px', padding:'5px'}} key={crypto.randomBytes(10).toString('hex')} dangerouslySetInnerHTML={{ __html: highlight }} />\r\n                    });\r\n                }\r\n                /* Page Work */\r\n\r\n\r\n                /* Methods */\r\n                getGallery(product.ManuUrl);\r\n                getSimilarLinks(product.IsFeatured);\r\n                getSpecification(ProductId);\r\n                getReviews(ProductId,product.IsFeatured,4);\r\n                getBundles(ProductId);\r\n                /* Methods */\r\n            }    \r\n\r\n            fetchData();\r\n        }\r\n    },[ProductId])\r\n\r\n    const RenderHTML = (props) => (<span dangerouslySetInnerHTML={{__html:props.HTML}}></span>)\r\n\r\n    const RenderHigh = (props) => {\r\n        if(props.high)\r\n            return props.high.split(\"|\").map((highlight) => \r\n                <Col className=\"m-0 text-center\" style={{fontSize:'13px', padding:'5px'}} key={crypto.randomBytes(10).toString('hex')} dangerouslySetInnerHTML={{ __html: highlight }} />\r\n            );\r\n        else\r\n            return <Col></Col>;\r\n    }\r\n\r\n    const currencyFormat = (num) => {\r\n        try{\r\n            return 'R ' + num.toFixed(2).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n        }catch(e){\r\n            return num;\r\n        }\r\n     }\r\n\r\n    const addToCart = ()=> {\r\n        console.log(\"Add To Cart Click\");\r\n    }\r\n\r\n    const notifyMe = () => {\r\n        console.log(\"Notify Me Click\");\r\n    }\r\n\r\n    /* Bundle Item Selection */\r\n    const bundleItemsSeleceted = bundleItem => {\r\n        setSelecetecBundleItems((prevBundleItems) => {\r\n            let nBundleId = bundleItem.BundleId;\r\n            prevBundleItems = _.filter(prevBundleItems,item => item.BundleId != nBundleId);\r\n            let selecetedBundles =  [...prevBundleItems,bundleItem];\r\n            return selecetedBundles;\r\n        });\r\n        \r\n    }\r\n    /* Bundle Item Selection */\r\n    \r\n    return (\r\n        <Container fluid>\r\n           <div className=\"wrapper p-2\">\r\n                <Row className=\"pb-3\">\r\n                    <Col lg={5} md={6} sm={6} xs={12} className=\"pt-2 pb-2\">\r\n                        <div>\r\n                        <LaptopGallery GalleryData={galleryData} />\r\n                        </div>\r\n                        {/* <Image className=\"hidden\" src={laptop.manuurl}></Image> */}\r\n                    </Col>\r\n                    <Col lg={5} md={6} sm={6} xs={12} className=\"pt-2 pb-2\">\r\n                        <Row>\r\n                            <Col>\r\n                                <RenderHTML  HTML={laptop.Des} />\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"mt-2\">\r\n                            <Col md={8} xs={12}>\r\n                                    <p  style={{fontSize:'13px'}} className='p-0 m-0'>  {laptop.SKU} </p>\r\n                                    <p style={{fontSize:'12px'}}  className='p-0 m-0'> Be the first to review this product...</p>\r\n                            </Col>\r\n                            <Col md={4} xs={12}>\r\n                            </Col>\r\n                        </Row>\r\n                        <hr></hr>\r\n                        <Row className=\"text-right p-0\">\r\n                            <span style={{fontSize:'12px'}}>Modal No : <b>{laptop.Code}</b></span>\r\n                        </Row>\r\n                        <Row className=\"\">\r\n                            <RenderHigh high={laptop.high} />\r\n                        </Row>\r\n                        <Row>\r\n                            <Col className=\"d-inline-flex justify-content-center mt-1 mb-1\">\r\n                                <Button className=\"btn btn-light border-dark w-100\" >\r\n                                   <FcLike/> Add To Wishlist\r\n                                </Button>\r\n                            </Col>\r\n                            <Col  className=\"d-inline-flex justify-content-center  mt-1 mb-1\">\r\n                                <Button className=\"btn btn-light  border-dark  w-100\" onClick={() => setAskQuestionShow(true)}>\r\n                                  <FcQuestions/> Ask a Question?\r\n                                </Button>\r\n\r\n                                <AskQuestion\r\n                                    show={askQuestionShow}\r\n                                    onHide={() => setAskQuestionShow(false)}\r\n                                />\r\n                            </Col>\r\n                            <Col  className=\"d-inline-flex justify-content-center  mt-1 mb-1\">\r\n                                <Button className=\"btn btn-light  border-dark  w-100\" onClick={() => setTellFriendShow(true)}>\r\n                                    <FcShare/> Tell a Friend\r\n                                </Button>\r\n\r\n                                <TellFriend\r\n                                    show={tellFriendShow}\r\n                                    onHide={() => setTellFriendShow(false)}\r\n                                />\r\n                            </Col>\r\n                            <Col  className=\"d-inline-flex justify-content-center  mt-1 mb-1\">\r\n                                <Button className=\"btn btn-light  border-dark  w-100\" >\r\n                                    <FcCurrencyExchange/> Price Match\r\n                                </Button>\r\n                            </Col>\r\n                        </Row>\r\n                    </Col>\r\n                    <Col lg={2} md={12} sm={12} xs={12} className=\"pt-2 pb-2\">\r\n                        {/* Pricing Section */}\r\n                        <Row className=\"text-right\">\r\n                            <span className=\"f-12\">List Price</span>\r\n                            <span><s> {currencyFormat(laptop.OldPrice)}</s></span>\r\n                            <span className=\"f-12\">Discounted Price</span>\r\n                            <span className=\"price-new\">{currencyFormat(laptop.Price)}</span>\r\n                            <span className=\"f-12 text-black-50\">Save {laptop.per}%</span>\r\n                            <span className=\"f-12 mt-1 fw-bold\">Note: price include 15% V.A.T</span>\r\n                            <span className=\"f-12 text-black-50\">Discount only available when paying by Instant EFT or EFT *</span>\r\n                        </Row>\r\n                        <Row>\r\n                            <Col>\r\n                                <QtyBox />\r\n                            </Col>\r\n                            <Col className=\"d-inline-flex justify-content-center\">\r\n                                <Badge bg=\"dark\" className=\"pt-2 pb-2 pe-3 ps-3 \">Free Delievery !</Badge>\r\n                            </Col>\r\n                        </Row>\r\n                        <Row className=\"pe-2 ps-2 pt-2 pb-1\">\r\n                            <Badge bg={stockBg} className=\"w-100 pt-3 pb-3 fs-6\">{stockStatus}</Badge>\r\n                        </Row>\r\n\r\n                        {cartElements}\r\n\r\n                        {/* Pricing Section */}\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                {/* Product Information Tabs */}    \r\n                <Col md={10} sm={12} xs={12}>\r\n                    <Tabs defaultActiveKey=\"description\" id=\"justify-tab-example\" className=\"mb-3\" justify>\r\n                        <Tab eventKey=\"description\" title=\"Description\" >\r\n                            <div className=\"container-fluid overflow-hidden\">\r\n                                <RenderHTML  HTML={laptop.DynamicOverview} />\r\n                            </div>\r\n                        </Tab>\r\n                        <Tab eventKey=\"specification\" title=\"Specification\">\r\n                            <div className=\"container-fluid overflow-hidden\">\r\n                                <LaptopSpec Specs={specification}/>\r\n                            </div>\r\n                        </Tab>\r\n                        <Tab eventKey=\"essential-extras\" title=\"Essential Extras\">\r\n                            <LaptopBundles ProductId={ProductId} Bundles={bundles} onBundleItemsSeleceted={bundleItemsSeleceted} selecetedItems={selectedBundleItems}/>\r\n                        </Tab>\r\n                        <Tab eventKey=\"reviews\" title=\"Reviews\">\r\n                            <LaptopReviews  ProductId={ProductId} Reviews={reviews} />\r\n                        </Tab>\r\n                    </Tabs>\r\n                </Col>\r\n                {/* Product Information Tabs */}    \r\n                <Col md={2} sm={12} xs={12}>\r\n                    <LaptopLinks links={similarLinks} brand={brand} ProductId={ProductId} />\r\n                </Col>\r\n                </Row>\r\n            </div>\r\n        </Container>\r\n    );\r\n\r\n}\r\n\r\nexport default Laptop;","D:\\react_app\\demo-app3\\src\\UI\\QtyBox.js",[],"D:\\react_app\\demo-app3\\src\\component\\LaptopGallery.js",["120","121"],"import React, { useEffect, useState } from \"react\";\r\nimport ImageGallery from 'react-image-gallery';\r\n\r\nconst LaptopGallery = (props) => {\r\n    return (\r\n        <div>\r\n            <ImageGallery  items={props.GalleryData} thumbnailPosition={\"left\"} />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default LaptopGallery;","D:\\react_app\\demo-app3\\src\\component\\MyGallery.js",[],"D:\\react_app\\demo-app3\\src\\component\\LaptopSpec.js",[],"D:\\react_app\\demo-app3\\src\\component\\LaptopBundles.js",["122","123","124","125","126","127","128"],"D:\\react_app\\demo-app3\\src\\component\\LaptopReviews.js",["129","130"],"import React from \"react\";\r\nimport { Card, Col, Form, Row } from \"react-bootstrap\";\r\n\r\n\r\nconst LaptopReviews = (props) =>{\r\n    const ProductID = props.ProductId;\r\n    const reviews = props.Reviews;\r\n    let reviewData = null;\r\n\r\n    if(reviews)\r\n    {\r\n        reviewData = reviews.map((review,ind)=>{\r\n            return <Card key={ind} >\r\n                <Card.Header>\r\n                    <Row className=\"d-flex gap-1\">\r\n                        <Col md={6} lg={6}>\r\n                            {review.ClientName}\r\n                            <br/>\r\n                            {review.AddedDate}\r\n                        </Col>    \r\n                        <Col md={6} lg={6} className=\"text-right\">\r\n                        </Col>    \r\n                    </Row>    \r\n                </Card.Header> \r\n                <Card.Body>\r\n                    <Row>\r\n                        <Card.Text>\r\n                            {review.Pros}\r\n                        </Card.Text>\r\n                    </Row>\r\n                </Card.Body>\r\n            </Card>\r\n        });\r\n    }\r\n   \r\n    return (\r\n        <div>\r\n           {reviewData}\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default LaptopReviews;","D:\\react_app\\demo-app3\\src\\component\\LaptopLinks.js",["131"],"import React, { useState } from \"react\";\r\nimport { Button, Card, ListGroup, ListGroupItem } from \"react-bootstrap\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst LaptopLinks = (props) =>{\r\n    const links = props.links;\r\n    const brand = props.brand;\r\n    const actProductId = props.ProductId;\r\n    const navigate = useNavigate();\r\n    let linksData=null;\r\n\r\n    const btnLinkClick = (pid) => {\r\n        navigate(`/details/${pid}`);\r\n    }\r\n\r\n    if(links.length > 0)\r\n    {\r\n        /* href={`/details/${link.pid}`}  */\r\n        linksData = links.map((link,ind)=>{\r\n                let btnClass = \"w-100 pt-2 pb-2 fw-bold btn \"+ (link.pid === actProductId ? \"btn-danger\" : \"btn-dark\");\r\n                return <ListGroupItem key={ind} className=\"p-0 mt-1 mb-1 text-center\">\r\n                   <Button  title={link.title} onClick={()=> btnLinkClick(link.pid)} style={{cursor:\"-moz-grab\"}}  className={btnClass} > {link.title}</Button>\r\n                </ListGroupItem>    \r\n            })\r\n    }\r\n    else{\r\n\r\n    }\r\n\r\n    return (\r\n        <Card>\r\n            <Card.Header className=\"text-center fw-bold\">\r\n                This {brand} Laptop Is Avaiable In The Following Configurations:\r\n            </Card.Header>\r\n            <Card.Body>\r\n                <ListGroup>\r\n                   {linksData}\r\n                </ListGroup>\r\n            </Card.Body>\r\n        </Card>\r\n    );\r\n\r\n}\r\n\r\nexport default LaptopLinks;","D:\\react_app\\demo-app3\\src\\component\\LaptopSpecDetails.js",["132"],"import React from \"react\";\r\nimport { Badge, Col, ListGroup } from \"react-bootstrap\";\r\n\r\nconst LaptopSpecDetails = (props) =>{\r\n    const specDetails = props.SpecDetails;\r\n    let details = null;\r\n\r\n    if(specDetails)\r\n    {\r\n        details = specDetails.map((sDetails,ind)=>{\r\n          return  <ListGroup.Item\r\n                as=\"li\"\r\n                className=\"d-flex justify-content-between align-items-start p-1 border-0\" \r\n                key={ind}\r\n            >\r\n                <Col className=\"ms-2\" md={4} sm={6}>\r\n                    <h6 className=\"\">{sDetails.SpecDetail}</h6>\r\n                </Col>\r\n                <Col md={8} sm={6} className=\"text-left p-0\" bg=\"primary\">\r\n                    {sDetails.Opt}\r\n                </Col>\r\n            </ListGroup.Item>\r\n        });\r\n    }\r\n\r\n    return (\r\n        <ListGroup as=\"ol\" >\r\n            {details}\r\n        </ListGroup>\r\n    );\r\n\r\n}\r\n\r\nexport default LaptopSpecDetails;","D:\\react_app\\demo-app3\\src\\component\\Modals\\AskQuestion.js",[],"D:\\react_app\\demo-app3\\src\\component\\Modals\\TellFriend.js",[],"D:\\react_app\\demo-app3\\src\\component\\Bundle.js",["133"],{"ruleId":"134","replacedBy":"135"},{"ruleId":"136","replacedBy":"137"},{"ruleId":"134","replacedBy":"138"},{"ruleId":"136","replacedBy":"139"},{"ruleId":"140","severity":1,"message":"141","line":10,"column":33,"nodeType":"142","messageId":"143","endLine":10,"endColumn":35},{"ruleId":"134","replacedBy":"144"},{"ruleId":"136","replacedBy":"145"},{"ruleId":"146","severity":1,"message":"147","line":29,"column":7,"nodeType":"148","endLine":29,"endColumn":9,"suggestions":"149"},{"ruleId":"150","severity":1,"message":"151","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"154","line":2,"column":41,"nodeType":"152","messageId":"153","endLine":2,"endColumn":46},{"ruleId":"150","severity":1,"message":"155","line":2,"column":48,"nodeType":"152","messageId":"153","endLine":2,"endColumn":55},{"ruleId":"150","severity":1,"message":"156","line":23,"column":12,"nodeType":"152","messageId":"153","endLine":23,"endColumn":18},{"ruleId":"150","severity":1,"message":"157","line":24,"column":12,"nodeType":"152","messageId":"153","endLine":24,"endColumn":21},{"ruleId":"150","severity":1,"message":"158","line":38,"column":9,"nodeType":"152","messageId":"153","endLine":38,"endColumn":19},{"ruleId":"150","severity":1,"message":"159","line":40,"column":12,"nodeType":"152","messageId":"153","endLine":40,"endColumn":19},{"ruleId":"150","severity":1,"message":"160","line":75,"column":29,"nodeType":"152","messageId":"153","endLine":75,"endColumn":39},{"ruleId":"146","severity":1,"message":"161","line":244,"column":34,"nodeType":"162","endLine":246,"endColumn":23},{"ruleId":"140","severity":1,"message":"163","line":295,"column":78,"nodeType":"142","messageId":"143","endLine":295,"endColumn":80},{"ruleId":"150","severity":1,"message":"164","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":26},{"ruleId":"150","severity":1,"message":"165","line":1,"column":28,"nodeType":"152","messageId":"153","endLine":1,"endColumn":36},{"ruleId":"150","severity":1,"message":"165","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"151","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"150","severity":1,"message":"166","line":2,"column":16,"nodeType":"152","messageId":"153","endLine":2,"endColumn":19},{"ruleId":"150","severity":1,"message":"167","line":2,"column":21,"nodeType":"152","messageId":"153","endLine":2,"endColumn":24},{"ruleId":"150","severity":1,"message":"168","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":20},{"ruleId":"150","severity":1,"message":"169","line":3,"column":22,"nodeType":"152","messageId":"153","endLine":3,"endColumn":30},{"ruleId":"150","severity":1,"message":"170","line":151,"column":15,"nodeType":"152","messageId":"153","endLine":151,"endColumn":30},{"ruleId":"150","severity":1,"message":"171","line":2,"column":21,"nodeType":"152","messageId":"153","endLine":2,"endColumn":25},{"ruleId":"150","severity":1,"message":"172","line":6,"column":11,"nodeType":"152","messageId":"153","endLine":6,"endColumn":20},{"ruleId":"150","severity":1,"message":"165","line":1,"column":17,"nodeType":"152","messageId":"153","endLine":1,"endColumn":25},{"ruleId":"150","severity":1,"message":"173","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":15},{"ruleId":"174","severity":1,"message":"175","line":32,"column":41,"nodeType":"176","endLine":32,"endColumn":90},"no-native-reassign",["177"],"no-negated-in-lhs",["178"],["177"],["178"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["177"],["178"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["179"],"no-unused-vars","'Card' is defined but never used.","Identifier","unusedVar","'Image' is defined but never used.","'NavItem' is defined but never used.","'adCart' is assigned a value but never used.","'divNotify' is assigned a value but never used.","'highlights' is assigned a value but never used.","'gallery' is assigned a value but never used.","'imageThumb' is assigned a value but never used.","Assignments to the 'highlights' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","Expected '!==' and instead saw '!='.","'useEffect' is defined but never used.","'useState' is defined but never used.","'Col' is defined but never used.","'Row' is defined but never used.","'FcCollapse' is defined but never used.","'FcExpand' is defined but never used.","'clickBundleHead' is assigned a value but never used.","'Form' is defined but never used.","'ProductID' is assigned a value but never used.","'Badge' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"180","fix":"181"},"Update the dependencies array to be: [fetchData]",{"range":"182","text":"183"},[932,934],"[fetchData]"]